{"version":3,"sources":["en-US-POSIX.js","$_lazy_route_resource lazy namespace object","src/app/app.component.ts","src/app/app.component.html","src/app/app.module.ts","src/app/make-transfer/make-transfer.component.ts","src/app/make-transfer/make-transfer.component.html","src/app/preview-transfer/preview-transfer.component.ts","src/app/preview-transfer/preview-transfer.component.html","src/app/recent-transactions/recent-transactions.component.ts","src/app/recent-transactions/recent-transactions.component.html","src/app/shared/pipes/transactions-filter.pipe.ts","src/app/shared/pipes/transactions-sort.pipe.ts","src/app/shared/services/data.service.ts","src/app/shared/services/mapping.service.ts","src/environments/environment.ts","src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["\"use strict\";(function(global){global.ng=global.ng||{};global.ng.common=global.ng.common||{};global.ng.common.locales=global.ng.common.locales||{};const u=undefined;function plural(n){let i=Math.floor(Math.abs(n)),v=n.toString().replace(/^[^.]*\\.?/,\"\").length;if(i===1&&v===0)return 1;return 5}global.ng.common.locales[\"en-us-posix\"]=[\"en-US-POSIX\",[[\"a\",\"p\"],[\"AM\",\"PM\"],u],[[\"AM\",\"PM\"],u,u],[[\"S\",\"M\",\"T\",\"W\",\"T\",\"F\",\"S\"],[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],[\"Su\",\"Mo\",\"Tu\",\"We\",\"Th\",\"Fr\",\"Sa\"]],u,[[\"J\",\"F\",\"M\",\"A\",\"M\",\"J\",\"J\",\"A\",\"S\",\"O\",\"N\",\"D\"],[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"]],u,[[\"B\",\"A\"],[\"BC\",\"AD\"],[\"Before Christ\",\"Anno Domini\"]],0,[6,0],[\"M/d/yy\",\"MMM d, y\",\"MMMM d, y\",\"EEEE, MMMM d, y\"],[\"h:mm a\",\"h:mm:ss a\",\"h:mm:ss a z\",\"h:mm:ss a zzzz\"],[\"{1}, {0}\",u,\"{1} 'at' {0}\",u],[\".\",\",\",\";\",\"%\",\"+\",\"-\",\"E\",\"\\xD7\",\"0/00\",\"INF\",\"NaN\",\":\"],[\"0.######\",\"0%\",\"\\xA4\\xA00.00\",\"0.000000E+000\"],\"USD\",\"$\",\"US Dollar\",{},\"ltr\",plural,[[[\"mi\",\"n\",\"in the morning\",\"in the afternoon\",\"in the evening\",\"at night\"],[\"midnight\",\"noon\",\"in the morning\",\"in the afternoon\",\"in the evening\",\"at night\"],u],[[\"midnight\",\"noon\",\"morning\",\"afternoon\",\"evening\",\"night\"],u,u],[\"00:00\",\"12:00\",[\"06:00\",\"12:00\"],[\"12:00\",\"18:00\"],[\"18:00\",\"21:00\"],[\"21:00\",\"06:00\"]]]]})(typeof globalThis!==\"undefined\"&&globalThis||typeof global!==\"undefined\"&&global||typeof window!==\"undefined\"&&window);","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\nimport { DataService } from \"./shared//services/data.service\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'peachtree-bank';\n\n  isPreview: boolean = false;\n\n  constructor(private data: DataService) {     \n  }\n\n  ngOnInit(): void {    \n    this.data.currentMessage.subscribe(message => {\n      // console.log('app', message);\n      this.isPreview = (message) ? message.isPreview : false;\n    })\n  }\n\n}\n","<div class=\"app\">\n\n  <div class=\"app-header\">\n    <div class=\"header-logo\"><img src=\"./assets/logo.jpg\"></div>    \n  </div>\n\n  <div class=\"app-content\">\n\n    <div class=\"item-left\" *ngIf=\"!isPreview\" [ngClass]=\"{'make-transfer': !isPreview}\">\n      <app-make-transfer></app-make-transfer>\n    </div>\n\n    <div class=\"item-left\" *ngIf=\"isPreview\" [ngClass]=\"{'preview-transfer': isPreview}\">\n      <app-preview-transfer></app-preview-transfer>\n    </div>\n\n    <div class=\"item-right recent-transactions\">\n      <app-recent-transactions></app-recent-transactions>\n    </div>\n  </div>\n\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { MakeTransferComponent } from './make-transfer/make-transfer.component';\nimport { RecentTransactionsComponent } from './recent-transactions/recent-transactions.component';\nimport { PreviewTransferComponent } from './preview-transfer/preview-transfer.component';\nimport { DataService } from './shared/services/data.service';\nimport { TransactionsFilterPipe } from './shared/pipes/transactions-filter.pipe';\nimport { TransactionsSortPipe } from './shared/pipes/transactions-sort.pipe';\nimport { MappingService } from './shared/services/mapping.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MakeTransferComponent,\n    RecentTransactionsComponent,\n    PreviewTransferComponent,\n    TransactionsFilterPipe,\n    TransactionsSortPipe\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [DataService, MappingService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\nimport { ITransfer } from '../shared/models/transfer.model';\nimport { DataService } from \"../shared/services/data.service\";\nimport { MappingService } from \"../shared/services/mapping.service\";\n\n@Component({\n  selector: 'app-make-transfer',\n  templateUrl: './make-transfer.component.html',\n  styleUrls: ['./make-transfer.component.css']\n})\nexport class MakeTransferComponent implements OnInit {\n\n  transfer: ITransfer;\n\n  constructor(private dataService: DataService, private mappingService: MappingService) {         \n  }\n\n  ngOnInit(): void {\n    this.initProperties();\n    this.listenTransfers();\n  }\n\n  listenTransfers(): void {\n    this.dataService.currentMessage.subscribe(message => {\n      if (message && !message.isPreview)   {\n        // this.initProperties();  \n        this.transfer = message;\n        this.transfer.amount = \"0.00\";\n      }\n    });\n  }\n\n  initProperties(): void {\n    this.transfer = this.mappingService.initProperties();\n  }\n\n  submit(): void {\n    const amount = +this.transfer.amount;\n    if ( amount > 0 ) {\n      this.transfer.isPreview = true;\n      this.dataService.changeMessage(this.transfer);\n    }    \n  }\n\n}\n","<div class=\"transfer\">\n\n    <div class=\"header\">\n        <div class=\"icon-container\"><img class=\"icon-image\" src=\"./assets/icons/arrows.png\" alt=\"icon-image\"></div>\n        <div class=\"heading\" i18n=\"Title for the Make Transfer card@@MakeTransferHeader\">Make a Transfer</div>\n    </div>\n    <div class=\"transfer-content\">\n\n        <div class=\"field\">\n            <div class=\"field-item field-label\"><label for=\"fromAccountBalance\" i18n=\"Label for fromAccount@@FromAccount\">From Account</label></div>\n            <div class=\"field-item field-input\"><input type=\"number\" id=\"fromAccountBalance\" name=\"fromAccountBalance\" placeholder=\"{{transfer.fromAccount}} {{transfer.fromAccountBalance}}\" disabled></div>\n        </div>\n        <div class=\"field\">\n            <div class=\"field-item field-label\"><label for=\"toAccount\" i18n=\"Label for ToAccount@@ToAccount\">To Account</label></div>\n            <div class=\"field-item field-input\"><input type=\"text\" id=\"toAccount\" name=\"toAccount\" [(ngModel)]=\"transfer.toAccount\" placeholder=\"{{transfer.toAccount}}\" #toAct (focus)=\"toAct.value = ''\"></div>\n        </div>\n        <div class=\"field\">\n            <div class=\"field-item field-label\"><label for=\"amount\" i18n=\"Label for Amount field@@Amount\">Amount</label></div>\n            <div class=\"field-item field-input input-group\">\n                <span class=\"input-group-addon\">$</span>\n                <input type=\"text\" id=\"amount\" name=\"amount\" [(ngModel)]=\"transfer.amount\" placeholder=\"{{transfer.amount}}\" #amt  (focus)=\"amt.value = ''\">\n            </div>\n        </div>\n        <div class=\"field submit\">\n            <button class=\"btn-submit\" (click)=\"submit()\" i18n=\"Label for Submit button@@SubmitButton\">Submit</button>\n        </div>\n    </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { ITransfer } from '../shared/models/transfer.model';\nimport { DataService } from \"../shared/services/data.service\";\nimport { MappingService } from \"../shared/services/mapping.service\";\n\n@Component({\n  selector: 'app-preview-transfer',\n  templateUrl: './preview-transfer.component.html',\n  styleUrls: ['./preview-transfer.component.css']\n})\nexport class PreviewTransferComponent implements OnInit {\n\n  transfer: ITransfer;\n\n  constructor(private dataService: DataService, private mappingService: MappingService) {     \n  }\n\n  ngOnInit(): void {    \n    this.listenTransfers();\n  }\n\n  listenTransfers(): void {\n    this.dataService.currentMessage.subscribe(message => {\n      this.transfer = message;\n      // console.log('preview', this.transfer)\n    });\n  }\n\n  transferMoney(): void {\n    this.mappingService.transferMoney(this.transfer);\n  }\n\n}\n","<div class=\"transfer\">\n\n    <div class=\"header\">\n        <div class=\"icon-container\"><img class=\"icon-image\" src=\"./assets/icons/arrows.png\" alt=\"icon-image\"></div>\n        <div class=\"heading\" i18n=\"Title for the Preview Transfer card@@PreviewTransferHeader\">Preview Transfer</div>\n    </div>\n    <div class=\"transfer-content\">\n\n        <div class=\"field\">\n            <div class=\"field-item field-label\"><label for=\"name\" i18n=\"lable for FromAccount@@FromAccount\">From Account</label></div>\n            <div class=\"field-item field-input\"><input type=\"number\" placeholder=\"{{transfer.fromAccount}} ${{transfer.fromAccountBalance}}\" disabled></div>\n        </div>\n        <div class=\"field\">\n            <div class=\"field-item field-label\"><label for=\"name\" i18n=\"lable for ToAccount@@ToAccount\">To Account</label></div>\n            <div class=\"field-item field-input\"><input type=\"text\" placeholder=\"{{transfer.toAccount}}\" disabled></div>\n        </div>\n        <div class=\"field\">\n            <div class=\"field-item field-label\"><label for=\"name\" i18n=\"lable for Amount@@PreviewAmount\">Amount</label></div>\n            <div class=\"field-item field-input input-group\">\n                <span class=\"input-group-addon\">$</span>\n                <input type=\"number\" placeholder=\"{{transfer.amount}}\" disabled>\n            </div>\n        </div>\n        <div class=\"field submit\">\n            <button class=\"btn-submit\" (click)=\"transferMoney()\" i18n=\"lable for Submit button@@Transfer\">Transfer</button>\n        </div>\n    </div>\n\n</div>\n","import { Component, OnInit, OnChanges } from '@angular/core';\n\nimport { ITransaction } from '../shared/models/transaction.model';\nimport { DataService } from \"../shared/services/data.service\";\nimport { MappingService } from \"../shared/services/mapping.service\";\n\n@Component({\n  selector: 'app-recent-transactions',\n  templateUrl: './recent-transactions.component.html',\n  styleUrls: ['./recent-transactions.component.css']\n})\nexport class RecentTransactionsComponent implements OnInit {\n\n  transactions: ITransaction[];\n  search: string;\n  isDesc: boolean = true;\n  sortColumn: string = 'transactionDate';\n  \n  constructor(private data: DataService, private mapService: MappingService) { }\n\n  ngOnInit(): void {\n    this.loadData();\n    this.listenTransfers();\n  }\n\n  loadData(): void {\n    this.transactions = this.mapService.loadMockedData();\n    // console.log(this.transactions);\n  }\n\n  listenTransfers(): void {\n    this.data.currentMessage.subscribe(message => {\n      if (message && !message.isPreview) {\n        const trans = this.mapService.mapTransferToTransactions(message);\n        this.transactions.unshift(trans);\n        // console.log('transactions', this.transactions)\n      }      \n    });\n  }\n\n  setSortColumn(colName: string): void {\n    this.sortColumn = colName;\n    this.isDesc = !this.isDesc;\n  }\n}\n","<div class=\"transactions\">\n\n    <div class=\"header\">\n        <div class=\"icon-container\"><img class=\"icon-image\" src=\"./assets/icons/briefcase.png\" alt=\"icon-image\"></div>\n        <div class=\"heading\" i18n=\"Title for the Recent Transactions card@@RecentTransactionHeader\">Recent Transactions</div>\n    </div>\n\n    <div class=\"transaction-contents\">\n        <div class=\"actions\">\n            <div class=\"action-filter\">\n                <input type=\"text\" #src [(ngModel)]=\"search\" placeholder=\"Search by typing...\" i18n-placeholder=\"Placeholder for Search filter@@SearchFilter\">\n                <div *ngIf=\"src.value.length > 0\" class=\"search-cross\" (click)=\"src.value = ''\">X</div>\n            </div>            \n            <div class=\"action-sort\">\n                <div class=\"sort-by\" i18n=\"Label for Sort by@@SortBy\">Sort by</div>\n                <div class=\"sort-fields\" (click)=\"setSortColumn('transactionDate')\">\n                    <div class=\"sort-labels\" i18n=\"Label for sortby Date@@SortByDate\">Date</div>\n                    <span *ngIf=\"sortColumn == 'transactionDate'\">\n                        <!-- TODO: need to make this better -->\n                        <sup *ngIf=\"isDesc\">&#9660;</sup>\n                        <sup *ngIf=\"!isDesc\">&#9650;</sup>\n                    </span>\n                </div>\n                <div class=\"sort-fields\" (click)=\"setSortColumn('merchant')\">\n                    <div class=\"sort-labels\" i18n=\"Label for sortby Beneficiary@@SortbyBenificiary\">Beneficiary</div>\n                    <span *ngIf=\"sortColumn == 'merchant'\">\n                        <sup *ngIf=\"isDesc\">&#9660;</sup>\n                        <sup *ngIf=\"!isDesc\">&#9650;</sup>\n                    </span>\n                </div>\n                <div class=\"sort-fields\" (click)=\"setSortColumn('amount')\">\n                    <div class=\"sort-labels\" i18n=\"Label for sortby Amount@@SortbyAmount\">Amount</div>\n                    <span *ngIf=\"sortColumn == 'amount'\">\n                        <sup *ngIf=\"isDesc\">&#9660;</sup>\n                        <sup *ngIf=\"!isDesc\">&#9650;</sup>\n                    </span>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"tabular-data\">\n            <div *ngFor=\"let item of transactions | transactionsFilter:src.value | transactionsSort:sortColumn:isDesc\" class=\"data-row\">\n                \n                <div class=\"data-item color-col\" style=\"background-color: {{item.categoryCode}};\">&nbsp;&nbsp;</div>\n                <div class=\"data-item col-left align-content-center\">{{item.transactionDate | date:'MMM dd'}}</div>\n                <div class=\"data-item align-content-center merchant-logo-box\"><img src=\"{{item.merchantLogo}}\" class=\"merchant-logo\" alt=\"merchant-logo\"></div>\n                <div class=\"data-item align-content-center\">\n                    <div class=\"merchant-info\">\n                        <div class=\"merchant-name\">{{item.merchant}}</div>\n                        <div class=\"transaction-type\">{{item.transactionType}}</div>\n                    </div>                    \n                </div>\n                <div class=\"data-item align-content-center col-right amount\">{{item.amount | currency}}</div>                \n            </div>\n        </div>\n\n    </div>\n\n</div>\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'transactionsFilter', pure: false})\r\nexport class TransactionsFilterPipe implements PipeTransform {\r\n\r\n  transform(transactions: any, searchText: any): any {\r\n    \r\n    if(searchText == null) return transactions;\r\n    // console.log('transform', searchText);\r\n    return transactions.filter(function(item){\r\n      return item.merchant.toLowerCase().indexOf(searchText.toLowerCase()) > -1;\r\n    })\r\n  }\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'transactionsSort', pure: false})\r\nexport class TransactionsSortPipe implements PipeTransform {\r\n\r\n  transform(value: any[], sortKey: string, orderType: boolean): any {\r\n\r\n    // console.log('sort', value, sortKey, orderType)\r\n    let sortOrder = orderType ? 'desc' : 'asc';\r\n    sortOrder = sortOrder && (sortOrder.toLowerCase() as any);\r\n\r\n    if (!value || (sortOrder !== 'asc' && sortOrder !== 'desc')) return value;\r\n\r\n    let numberArray = [];\r\n    let stringArray = [];\r\n\r\n    if (!sortKey) {\r\n      numberArray = value.filter(item => typeof item === 'number').sort();\r\n      stringArray = value.filter(item => typeof item === 'string').sort();\r\n    } else {\r\n      numberArray = value.filter(item => typeof item[sortKey] === 'number').sort((a, b) => a[sortKey] - b[sortKey]);\r\n      stringArray = value\r\n        .filter(item => typeof item[sortKey] === 'string')\r\n        .sort((a, b) => {\r\n          if (a[sortKey] < b[sortKey]) return -1;\r\n          else if (a[sortKey] > b[sortKey]) return 1;\r\n          else return 0;\r\n        });\r\n    }\r\n    const sorted = numberArray.concat(stringArray);\r\n    return sortOrder === 'asc' ? sorted : sorted.reverse();\r\n  }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nimport { ITransfer } from '../models/transfer.model';\r\n\r\n@Injectable()\r\nexport class DataService {\r\n\r\n    transfer: ITransfer;\r\n    private messageSource = new BehaviorSubject(this.transfer);    \r\n    currentMessage = this.messageSource.asObservable();\r\n\r\n    constructor() { }\r\n\r\n    changeMessage(message: ITransfer) {\r\n        this.messageSource.next(message);\r\n        // console.log('message', message)\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport MockedTransactions from '../../../assets/mock/transactions.json';\r\nimport { DataService } from \"./data.service\";\r\n\r\nimport { ITransaction } from '../models/transaction.model';\r\nimport { ITransfer } from '../models/transfer.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MappingService {\r\n\r\n  constructor(private dataService: DataService) { }\r\n\r\n  loadMockedData() {\r\n    // console.log(MockedTransactions.data)\r\n    let transactions:ITransaction[] = Object.assign([], MockedTransactions.data);\r\n    transactions.forEach( item => {\r\n      const amount = +item.amount;\r\n      item.amount = (amount * -1).toFixed(2);\r\n    });\r\n    return transactions;\r\n  }\r\n\r\n  mapTransferToTransactions(message): ITransaction {\r\n\r\n    const amount = +message.amount;\r\n    const trans: ITransaction = {\r\n        // amount: message.amount,\r\n        amount:  (amount * -1).toFixed(2),\r\n        categoryCode: \"#d51271\",\r\n        transactionType: 'Transfer',\r\n        merchant: message.toAccount,\r\n        merchantLogo: '',\r\n        transactionDate: Date.now()\r\n      };\r\n    return trans;\r\n  }\r\n\r\n  initProperties(): ITransfer {\r\n\r\n    const transfer: ITransfer = {    \r\n      fromAccountBalance: 5824.76,\r\n      fromAccount: 'Free Checking(4692) - $',\r\n      toAccount: 'Georgia Power Electric Company',\r\n      amount: \"0.00\",\r\n      isPreview: false\r\n    };    \r\n    console.log(transfer)\r\n    return transfer;\r\n  }\r\n\r\n  transferMoney(transfer: ITransfer) {\r\n\r\n    // console.log('transfer', transfer)\r\n    transfer.isPreview = false;\r\n    const amount = +transfer.amount;\r\n    const dif = +(transfer.fromAccountBalance - amount).toFixed(2);\r\n    transfer.fromAccountBalance = dif >= 500 ? dif : transfer.fromAccountBalance;\r\n    this.dataService.changeMessage(transfer);\r\n    console.log('transfer', transfer)\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}